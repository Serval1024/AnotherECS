// <auto-generated>
// This source code was auto-generated by StateGenerator.cs
// </auto-generated>

using System;
using System.Runtime.InteropServices;

namespace AnotherECS.Core
{
    public sealed class <#STATE:GEN_NAME#> : <#STATE:NAME#>
    {
        [StructLayout(LayoutKind.Sequential)]
        public readonly struct FastAccess
        {
            private readonly StorageLayout* _layoutPtr;

            private FastAccess(StorageLayout* layoutPtr)
            {
                _layoutPtr = layoutPtr;
            }

            //TODO
        }

        private FastAccess _fast;
        public ref readonly FastAccess Fast => ref _fast;


        protected override void BindingCodeGenerationStage(in GeneralConfig general)
        {
<#ARRAY [0..COMPONENT:COUNT]#>
            LayoutInstaller.Add_<#COMPONENT:FULL_NAME#>(this);
<#END#>
            UpdateFastAccess();

            SystemGlobalInstaller.Install();
        }

        private void UpdateFastAccess()
        {
            FastAccess fastAccess;
            UpdateFastAccess(&fastAccess);
            _fast = fastAccess;
        }

        protected override uint GetComponentCount()
            => <#COMPONENT:COUNT#>;

        protected override ushort GetIndex<T>()
            => CompileComponentIdProvider<<#STATE:GEN_NAME#>, T>.ID;

        protected override void OnTickFinished()
        {
<#ARRAY [0..COMPONENT:COUNT]#>   
            
<#END#>
        }
    }
}