// <auto-generated>
// This source code was auto-generated by FastAccessGenerator.cs
// </auto-generated>

using System;
using System.Runtime.CompilerServices;
using AnotherECS.Core;
using AnotherECS.Core.Actions
using EntityId = System.UInt32;

namespace AnotherECS.Gen.Common
{
#if ENABLE_IL2CPP
    [Unity.IL2CPP.CompilerServices.Il2CppSetOption(Option.NullChecks, false)]
    [Unity.IL2CPP.CompilerServices.Il2CppSetOption(Option.ArrayBoundsChecks, false)]
#endif
    public unsafe struct <#STORAGE:TYPE_NAME#>_FA<TComponent>
        where TComponent : unmanaged, IComponent<#GENERIC_CONSTRAINTS:TComponent#>
    {
        private <#STORAGE:TYPE_NAME#>_Caller _caller;

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public T Create()
            => _caller.Create();

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public Type GetElementType()
            => _caller.GetElementType();

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public uint GetCount()
            => _caller.GetCount();

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool IsHas(<#IF MULTI#>EntityId id<#END#>)
            => _caller.IsHas(<#IF MULTI#>id<#END#>);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Add(<#IF MULTI#>EntityId id, <#END#>ref T data)
        {
            _caller.Add(<#IF MULTI#>id, <#END#>ref data);
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ref T Add(<#IF MULTI#>EntityId id<#END#>)
            => _caller.Add(<#IF MULTI#>id<#END#>);
            
        public void AddVoid(<#IF MULTI#>EntityId id<#END#>)
        {
            _caller.Add(<#IF MULTI#>id<#END#>);
        }

        public void Remove(<#IF MULTI#>EntityId id<#END#>)
        {
            _caller.Remove(<#IF MULTI#>id<#END#>);
        }

        public ref readonly T Read(<#IF MULTI#>EntityId id<#END#>)
            => _caller.Read(<#IF MULTI#>id<#END#>);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ref T Get(<#IF MULTI#>EntityId id<#END#>)
            => _caller.Get(<#IF MULTI#>id<#END#>);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Set(<#IF MULTI#>EntityId id, <#END#>ref T data)
        {
            _caller.Set(<#IF MULTI#>id, <#END#>ref data);
        }

        public uint GetVersion(<#IF MULTI#>EntityId id<#END#>)
            => _caller.GetVersion(<#IF MULTI#>id<#END#>);
    }
}