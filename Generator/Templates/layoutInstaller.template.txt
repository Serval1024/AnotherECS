// <auto-generated>
// This source code was auto-generated by LayoutInstallerGenerator.cs
// </auto-generated>

using System.Runtime.CompilerServices;
using AnotherECS.Core;
using AnotherECS.Gen.Common;

namespace AnotherECS.Gen.Project
{
    public static class LayoutInstaller
    {
<#ARRAY [0..COMPONENT:COUNT]#>
---<#IF INJECT || REBINDMEMORY#>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static void Install_<#COMPONENT:FULL_NAME_AS_TEXT#>(State state)
        {
            CommonLayoutInstaller.Install_<#CALLER:TYPE_NAME#><<#COMPONENT:FULL_NAME#>>(state, new ComponentFunction<<#COMPONENT:FULL_NAME#>>() { <#IF INJECT#>construct = &Construct, deconstruct = &Deconstruct, <#END#><#IF REBINDMEMORY#>memoryRebind = &MemoryRebind <#END#>});

            static void Construct(ref InjectContainer injectContainer, ref <#COMPONENT:FULL_NAME#> component)
            {
#if !ANOTHERECS_RELEASE
                ReflectionUtils.ReflectionInjectConstruct(ref component, ref injectContainer);
#else
------<#IF INJECT:SELF#>
                component.Construct(<#INJECT:SELF:ARGS#>);
------<#END#>
------<#ARRAY [0..INJECT:FIELD:COUNT]#>
                component.<#INJECT:FIELD:NAME#>.Construct(<#INJECT:FIELD:ARGS#>);
------<#END#>
#endif
            }

            static void Deconstruct(ref InjectContainer injectContainer, ref <#COMPONENT:FULL_NAME#> component)
            {
#if !ANOTHERECS_RELEASE
                ReflectionUtils.ReflectionInjectDeconstruct(ref component, ref injectContainer);
#else
------<#IF INJECT:SELF#>
                component.Deconstruct();
------<#END#>
------<#ARRAY [0..INJECT:FIELD:COUNT]#>
                component.<#INJECT:FIELD:NAME#>.Deconstruct();
------<#END#>
#endif
            }

            static void MemoryRebind(ref MemoryRebinderContext rebinder, ref <#COMPONENT:FULL_NAME#> component)
            {
#if !ANOTHERECS_RELEASE
                ReflectionUtils.ReflectionRebindMemoryHandle(ref component, ref rebinder);
#else
------<#IF REBINDMEMORY:SELF#>
                component.RebindMemoryHandle(ref rebinder);
------<#END#>
------<#ARRAY [0..REBINDMEMORY:FIELD:COUNT]#>
                component.<#REBINDMEMORY:FIELD:NAME#>.RebindMemoryHandle(ref rebinder);
------<#END#>
#endif
            }
        }
---<#ELSE#>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static void Install_<#COMPONENT:FULL_NAME_AS_TEXT#>(State state)
        {
            CommonLayoutInstaller.Install_<#CALLER:TYPE_NAME#><<#COMPONENT:FULL_NAME#>>(state);
        }
---<#END#>
<#END#>
    }
}        
        