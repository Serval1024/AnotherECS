// <auto-generated>
// This source code was auto-generated by LayoutInstallerGenerator.cs
// </auto-generated>

using AnotherECS.Core;
using AnotherECS.Core.Allocators;
using AnotherECS.Core.Caller;
using AnotherECS.Core.Collection;
using System.Runtime.CompilerServices;

namespace AnotherECS.Gen.Common
{
    public static class CommonLayoutInstaller
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static void Install_BL2NoBER<TComponent>(State state)
            where TComponent : unmanaged, IComponent
        {
            state.AddLayout<Caller<
				HAllocator, ushort, TComponent, ushort, 
#if ANOTHERECS_HISTORY_DISABLE
				NoHistoryAllocatorCF,
#else
				HistoryAllocatorCF,
#endif
				UshortNumber,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				RecycleStorageCF<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				UshortSparseCF < HAllocator, TComponent>,
				UshortDenseCF<HAllocator, ushort, TComponent>,
				BinderToFiltersCF,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				BSerializeCF<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>
				>
			, TComponent>();
        }
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static void Install_BSL0<TComponent>(State state)
            where TComponent : unmanaged, IComponent, ISingle
        {
            state.AddLayout<Caller<
				HAllocator, bool, TComponent, uint, 
#if ANOTHERECS_HISTORY_DISABLE
				NoHistoryAllocatorCF,
#else
				HistoryAllocatorCF,
#endif
				UintNumber,
				Nothing<HAllocator, bool, TComponent, uint>,
				SingleStorageCF<HAllocator, bool, TComponent, uint>,
				Nothing<HAllocator, bool, TComponent, uint>,
				Nothing<HAllocator, bool, TComponent, uint>,
				Nothing<HAllocator, bool, TComponent, uint>,
				Nothing<HAllocator, bool, TComponent, uint>,
				SingleSparseCF<HAllocator, TComponent>,
				SingleCF<HAllocator, bool, TComponent, uint>,
				Nothing<HAllocator, bool, TComponent, uint>,
				Nothing<HAllocator, bool, TComponent, uint>,
				BSerializeCF<HAllocator, bool, TComponent, uint>,
				Nothing<HAllocator, bool, TComponent, uint>,
				Nothing<HAllocator, bool, TComponent, uint>
				>
			, TComponent>();
        }
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static void Install_BADL2NoBER<TComponent>(State state)
            where TComponent : unmanaged, IComponent, IAttachExternal, IDetachExternal
        {
            state.AddLayout<Caller<
				HAllocator, ushort, TComponent, ushort, 
#if ANOTHERECS_HISTORY_DISABLE
				NoHistoryAllocatorCF,
#else
				HistoryAllocatorCF,
#endif
				UshortNumber,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				RecycleStorageCF<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				AttachDetachExternalCF<HAllocator, ushort, TComponent, ushort>,
				AttachExternalCF<HAllocator, ushort, TComponent, ushort>,
				DetachExternalCF<HAllocator, ushort, TComponent, ushort>,
				UshortSparseCF < HAllocator, TComponent>,
				UshortDenseCF<HAllocator, ushort, TComponent>,
				BinderToFiltersCF,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				BSerializeCF<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>
				>
			, TComponent>();
        }
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static void Install_BVL2NoBER<TComponent>(State state)
            where TComponent : unmanaged, IComponent, IVersion
        {
            state.AddLayout<Caller<
				HAllocator, ushort, TComponent, ushort, 
#if ANOTHERECS_HISTORY_DISABLE
				NoHistoryAllocatorCF,
#else
				HistoryAllocatorCF,
#endif
				UshortNumber,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				RecycleStorageCF<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				UshortSparseCF < HAllocator, TComponent>,
				UshortDenseCF<HAllocator, ushort, TComponent>,
				BinderToFiltersCF,
				UshortVersionCF<HAllocator, ushort, TComponent>,
				BSerializeCF<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>
				>
			, TComponent>();
        }
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static void Install_BL0EmptyNoBE<TComponent>(State state)
            where TComponent : unmanaged, IComponent
        {
            state.AddLayout<Caller<
				HAllocator, bool, TComponent, ushort, 
#if ANOTHERECS_HISTORY_DISABLE
				NoHistoryAllocatorCF,
#else
				HistoryAllocatorCF,
#endif
				UshortNumber,
				Nothing<HAllocator, bool, TComponent, ushort>,
				IncrementStorageCF<HAllocator, bool, TComponent, ushort>,
				Nothing<HAllocator, bool, TComponent, ushort>,
				Nothing<HAllocator, bool, TComponent, ushort>,
				Nothing<HAllocator, bool, TComponent, ushort>,
				Nothing<HAllocator, bool, TComponent, ushort>,
				BoolSparseCF<HAllocator, TComponent>,
				EmptyCF<HAllocator, bool, TComponent, ushort>,
				BinderToFiltersCF,
				Nothing<HAllocator, bool, TComponent, ushort>,
				BSerializeCF<HAllocator, bool, TComponent, ushort>,
				Nothing<HAllocator, bool, TComponent, ushort>,
				Nothing<HAllocator, bool, TComponent, ushort>
				>
			, TComponent>();
        }
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static void Install_BL2InjRmNoBER<TComponent>(State state, ComponentFunction<TComponent> componentFunction)
            where TComponent : unmanaged, IComponent
        {
            state.AddLayout<Caller<
				HAllocator, ushort, TComponent, ushort, 
#if ANOTHERECS_HISTORY_DISABLE
				NoHistoryAllocatorCF,
#else
				HistoryAllocatorCF,
#endif
				UshortNumber,
				InjectCF<HAllocator, ushort, TComponent, ushort>,
				RecycleStorageCF<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				UshortSparseCF < HAllocator, TComponent>,
				UshortDenseCF<HAllocator, ushort, TComponent>,
				BinderToFiltersCF,
				Nothing<HAllocator, ushort, TComponent, ushort>,
				BSerializeCF<HAllocator, ushort, TComponent, ushort>,
				RepairMemoryCF<TComponent>,
				Nothing<HAllocator, ushort, TComponent, ushort>
				>
			, TComponent>(componentFunction);
        }

    }
}        
        